SETs
t
;

$gdxin SSSin
$load t
$gdxin

scalar
PVcost /1000000/
*cost in USD per MW
BSScost /400000/
*cost in USD per MWh
deltat /0.5/
*time considered
;

parameters
L(t) Load that need to be supplied
Spu(t) Solar daily patterns per kWp
;

$GDXIN SSSin.gdx
$LOAD L Spu
$GDXIN

Variables
F Funcion objetivo
BEV(t) Battery Energy Variation
;

positive variables
BSScap Battery storage system capacity in MWh
SoC(t) State of Charge in MWh
PVcap Photo Voltaic Capacity MW
PVSSp(t) Photo Voltaic - Storage System Power
;
SoC.fx('1')=0;

EQUATIONS
OBJ,DailySupply(t),StateOfCharge(t),SoCfinal(t),PVSSdef(t),BEVupb(t),BEVlob(t),SoCupb(t);
OBJ.. F=E=PVcost*PVcap+BSScost*BSScap;
DailySupply(t).. deltat*PVcap*Spu(t)=G=deltat*L(t)+BEV(t);
StateOfCharge(t).. SoC(t)=E=SoC(t-1)+BEV(t-1);
SoCfinal(t)$(ord(t)=1).. SoC('ord(t)')=E=SoC('card(t)')+BEV('card(t)');
PVSSdef(t).. PVSSp(t)=E=PVcap*Spu(t)-BEV(t)/deltat;
BEVupb(t).. BEV(t)=L=BSScap;
BEVlob(t).. BEV(t)=G=-BSScap;
SoCupb(t).. SoC(t)=L=BSScap;

*UPPER VALUES
PVSSp.lo(t)=0;

*LOWER VALUES
SoC.lo(t)=0;
PVSSp.lo(t)=0;

*Initial values

MODEL SSS /ALL/;
SOLVE SSS USING LP MINIMIZING F;

execute_unload 'SSSout.gdx',F,PVcap,BSScap,BEV,SoC,PVSSp;

*$gdxout out
*$unload F Vm delta Pg Qg PENS Pd Qd Sfrom Sto
*$gdxout
